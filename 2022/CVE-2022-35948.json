{
	"affected_release": [
		{
			"advisory": "RHSA-2022:7276",
			"cpe": "cpe:/a:redhat:acm:2.4::el8",
			"package": "rhacm2/search-ui-rhel8:v2.4.8-5",
			"product_name": "Red Hat Advanced Cluster Management for Kubernetes 2.4 for RHEL 8",
			"release_date": "2022-11-01T00:00:00Z"
		}
	],
	"bugzilla": {
		"description": "CVE-2022-35948 nodejs: undici vulnerable to CRLF via content headers",
		"id": "2121101",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2121101"
	},
	"csaw": false,
	"cvss3": {
		"cvss3_base_score": "5.3",
		"cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
		"status": "verified"
	},
	"cwe": "CWE-93",
	"details": [
		"undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
		"A flaw was found in the undici package. When requesting unsanitized input on content-type headers, it is possible to inject additional requests via Carriage Return/Line Feed (CRLF)."
	],
	"mitigation": {
		"lang": "en:us",
		"value": "A possible mitigation is to sanitize user input when sending content-type headers."
	},
	"name": "CVE-2022-35948",
	"package_state": [
		{
			"cpe": "cpe:/a:redhat:openshift_devspaces:3::el8",
			"fix_state": "Affected",
			"package_name": "devspaces/dashboard-rhel8",
			"product_name": "Red Hat OpenShift Dev Spaces"
		}
	],
	"public_date": "2022-08-09T00:00:00Z",
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2022-35948\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35948\nhttps://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3"
	],
	"threat_severity": "Moderate",
	"upstream_fix": "undici 5.8.2"
}
