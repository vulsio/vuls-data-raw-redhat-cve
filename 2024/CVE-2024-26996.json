{
	"name": "CVE-2024-26996",
	"threat_severity": "Moderate",
	"public_date": "2024-05-01T00:00:00Z",
	"bugzilla": {
		"description": "kernel: usb: gadget: f_ncm: Fix UAF ncm object at re-bind after usb ep transport error",
		"id": "2278308",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2278308"
	},
	"cvss3": {
		"cvss3_base_score": "5.5",
		"cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
		"status": "draft"
	},
	"details": [
		"In the Linux kernel, the following vulnerability has been resolved:\nusb: gadget: f_ncm: Fix UAF ncm object at re-bind after usb ep transport error\nWhen ncm function is working and then stop usb0 interface for link down,\neth_stop() is called. At this piont, accidentally if usb transport error\nshould happen in usb_ep_enable(), 'in_ep' and/or 'out_ep' may not be enabled.\nAfter that, ncm_disable() is called to disable for ncm unbind\nbut gether_disconnect() is never called since 'in_ep' is not enabled.\nAs the result, ncm object is released in ncm unbind\nbut 'dev->port_usb' associated to 'ncm->port' is not NULL.\nAnd when ncm bind again to recover netdev, ncm object is reallocated\nbut usb0 interface is already associated to previous released ncm object.\nTherefore, once usb0 interface is up and eth_start_xmit() is called,\nreleased ncm object is dereferrenced and it might cause use-after-free memory.\n[function unlink via configfs]\nusb0: eth_stop dev->port_usb=ffffff9b179c3200\n--> error happens in usb_ep_enable().\nNCM: ncm_disable: ncm=ffffff9b179c3200\n--> no gether_disconnect() since ncm->port.in_ep->enabled is false.\nNCM: ncm_unbind: ncm unbind ncm=ffffff9b179c3200\nNCM: ncm_free: ncm free ncm=ffffff9b179c3200   <-- released ncm\n[function link via configfs]\nNCM: ncm_alloc: ncm alloc ncm=ffffff9ac4f8a000\nNCM: ncm_bind: ncm bind ncm=ffffff9ac4f8a000\nNCM: ncm_set_alt: ncm=ffffff9ac4f8a000 alt=0\nusb0: eth_open dev->port_usb=ffffff9b179c3200  <-- previous released ncm\nusb0: eth_start dev->port_usb=ffffff9b179c3200 <--\neth_start_xmit()\n--> dev->wrap()\nUnable to handle kernel paging request at virtual address dead00000000014f\nThis patch addresses the issue by checking if 'ncm->netdev' is not NULL at\nncm_disable() to call gether_disconnect() to deassociate 'dev->port_usb'.\nIt's more reasonable to check 'ncm->netdev' to call gether_connect/disconnect\nrather than check 'ncm->port.in_ep->enabled' since it might not be enabled\nbut the gether connection might be established."
	],
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2024-26996\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-26996\nhttps://lore.kernel.org/linux-cve-announce/2024050145-CVE-2024-26996-ff2f@gregkh/T"
	],
	"package_state": [
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:6",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 6"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 9"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 9"
		}
	],
	"upstream_fix": "kernel 5.15.157, kernel 6.1.88, kernel 6.6.29, kernel 6.8.8, kernel 6.9-rc5",
	"csaw": false
}
