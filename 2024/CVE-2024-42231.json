{
	"name": "CVE-2024-42231",
	"threat_severity": "Moderate",
	"public_date": "2024-07-30T00:00:00Z",
	"bugzilla": {
		"description": "kernel: From NVD collector",
		"id": "2301548",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2301548"
	},
	"details": [
		"In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: zoned: fix calc_available_free_space() for zoned mode\ncalc_available_free_space() returns the total size of metadata (or\nsystem) block groups, which can be allocated from unallocated disk\nspace. The logic is wrong on zoned mode in two places.\nFirst, the calculation of data_chunk_size is wrong. We always allocate\none zone as one chunk, and no partial allocation of a zone. So, we\nshould use zone_size (= data_sinfo->chunk_size) as it is.\nSecond, the result \"avail\" may not be zone aligned. Since we always\nallocate one zone as one chunk on zoned mode, returning non-zone size\naligned bytes will result in less pressure on the async metadata reclaim\nprocess.\nThis is serious for the nearly full state with a large zone size device.\nAllowing over-commit too much will result in less async reclaim work and\nend up in ENOSPC. We can align down to the zone size to avoid that."
	],
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2024-42231\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-42231\nhttps://git.kernel.org/stable/c/64d2c847ba380e07b9072d65a50aa6469d2aa43f\nhttps://git.kernel.org/stable/c/8548903b1999bba02a2b894ad750ab8eb1f40307"
	],
	"csaw": false
}
