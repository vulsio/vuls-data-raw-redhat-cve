{
	"name": "CVE-2024-47702",
	"threat_severity": "Low",
	"public_date": "2024-10-21T00:00:00Z",
	"bugzilla": {
		"description": "kernel: bpf: Fail verification for sign-extension of packet data/data_end/data_meta",
		"id": "2320179",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2320179"
	},
	"cvss3": {
		"cvss3_base_score": "5.5",
		"cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
		"status": "draft"
	},
	"details": [
		"In the Linux kernel, the following vulnerability has been resolved:\nbpf: Fail verification for sign-extension of packet data/data_end/data_meta\nsyzbot reported a kernel crash due to\ncommit 1f1e864b6555 (\"bpf: Handle sign-extenstin ctx member accesses\").\nThe reason is due to sign-extension of 32-bit load for\npacket data/data_end/data_meta uapi field.\nThe original code looks like:\nr2 = *(s32 *)(r1 + 76) /* load __sk_buff->data */\nr3 = *(u32 *)(r1 + 80) /* load __sk_buff->data_end */\nr0 = r2\nr0 += 8\nif r3 > r0 goto +1\n...\nNote that __sk_buff->data load has 32-bit sign extension.\nAfter verification and convert_ctx_accesses(), the final asm code looks like:\nr2 = *(u64 *)(r1 +208)\nr2 = (s32)r2\nr3 = *(u64 *)(r1 +80)\nr0 = r2\nr0 += 8\nif r3 > r0 goto pc+1\n...\nNote that 'r2 = (s32)r2' may make the kernel __sk_buff->data address invalid\nwhich may cause runtime failure.\nCurrently, in C code, typically we have\nvoid *data = (void *)(long)skb->data;\nvoid *data_end = (void *)(long)skb->data_end;\n...\nand it will generate\nr2 = *(u64 *)(r1 +208)\nr3 = *(u64 *)(r1 +80)\nr0 = r2\nr0 += 8\nif r3 > r0 goto pc+1\nIf we allow sign-extension,\nvoid *data = (void *)(long)(int)skb->data;\nvoid *data_end = (void *)(long)skb->data_end;\n...\nthe generated code looks like\nr2 = *(u64 *)(r1 +208)\nr2 <<= 32\nr2 s>>= 32\nr3 = *(u64 *)(r1 +80)\nr0 = r2\nr0 += 8\nif r3 > r0 goto pc+1\nand this will cause verification failure since \"r2 <<= 32\" is not allowed\nas \"r2\" is a packet pointer.\nTo fix this issue for case\nr2 = *(s32 *)(r1 + 76) /* load __sk_buff->data */\nthis patch added additional checking in is_valid_access() callback\nfunction for packet data/data_end/data_meta access. If those accesses\nare with sign-extenstion, the verification will fail.\n[1] https://lore.kernel.org/bpf/000000000000c90eee061d236d37@google.com/"
	],
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2024-47702\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-47702\nhttps://lore.kernel.org/linux-cve-announce/2024102115-CVE-2024-47702-c5c4@gregkh/T"
	],
	"package_state": [
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:6",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 6"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Fix deferred",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 9"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Fix deferred",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 9"
		}
	],
	"csaw": false
}
