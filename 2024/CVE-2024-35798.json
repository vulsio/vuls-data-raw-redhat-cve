{
	"name": "CVE-2024-35798",
	"threat_severity": "Moderate",
	"public_date": "2024-05-17T00:00:00Z",
	"bugzilla": {
		"description": "kernel: btrfs: fix race in read_extent_buffer_pages()",
		"id": "2281241",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2281241"
	},
	"cvss3": {
		"cvss3_base_score": "5.5",
		"cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
		"status": "draft"
	},
	"details": [
		"In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: fix race in read_extent_buffer_pages()\nThere are reports from tree-checker that detects corrupted nodes,\nwithout any obvious pattern so possibly an overwrite in memory.\nAfter some debugging it turns out there's a race when reading an extent\nbuffer the uptodate status can be missed.\nTo prevent concurrent reads for the same extent buffer,\nread_extent_buffer_pages() performs these checks:\n/* (1) */\nif (test_bit(EXTENT_BUFFER_UPTODATE, &eb->bflags))\nreturn 0;\n/* (2) */\nif (test_and_set_bit(EXTENT_BUFFER_READING, &eb->bflags))\ngoto done;\nAt this point, it seems safe to start the actual read operation. Once\nthat completes, end_bbio_meta_read() does\n/* (3) */\nset_extent_buffer_uptodate(eb);\n/* (4) */\nclear_bit(EXTENT_BUFFER_READING, &eb->bflags);\nNormally, this is enough to ensure only one read happens, and all other\ncallers wait for it to finish before returning.  Unfortunately, there is\na racey interleaving:\nThread A | Thread B | Thread C\n---------+----------+---------\n(1)   |          |\n|    (1)   |\n(2)   |          |\n(3)   |          |\n(4)   |          |\n|    (2)   |\n|          |    (1)\nWhen this happens, thread B kicks of an unnecessary read. Worse, thread\nC will see UPTODATE set and return immediately, while the read from\nthread B is still in progress.  This race could result in tree-checker\nerrors like this as the extent buffer is concurrently modified:\nBTRFS critical (device dm-0): corrupted node, root=256\nblock=8550954455682405139 owner mismatch, have 11858205567642294356\nexpect [256, 18446744073709551360]\nFix it by testing UPTODATE again after setting the READING bit, and if\nit's been set, skip the unnecessary read.\n[ minor update of changelog ]"
	],
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2024-35798\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-35798\nhttps://lore.kernel.org/linux-cve-announce/2024051737-CVE-2024-35798-8d90@gregkh/T"
	],
	"package_state": [
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:6",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 6"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 9"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 9"
		}
	],
	"upstream_fix": "kernel 6.6.24, kernel 6.7.12, kernel 6.8.3, kernel 6.9",
	"csaw": false
}
