{
	"name": "CVE-2024-41067",
	"threat_severity": "Moderate",
	"public_date": "2024-07-29T00:00:00Z",
	"bugzilla": {
		"description": "kernel: btrfs: scrub: handle RST lookup error correctly",
		"id": "2300443",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2300443"
	},
	"cvss3": {
		"cvss3_base_score": "5.5",
		"cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
		"status": "draft"
	},
	"cwe": "CWE-362",
	"details": [
		"In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: scrub: handle RST lookup error correctly\n[BUG]\nWhen running btrfs/060 with forced RST feature, it would crash the\nfollowing ASSERT() inside scrub_read_endio():\nASSERT(sector_nr < stripe->nr_sectors);\nBefore that, we would have tree dump from\nbtrfs_get_raid_extent_offset(), as we failed to find the RST entry for\nthe range.\n[CAUSE]\nInside scrub_submit_extent_sector_read() every time we allocated a new\nbbio we immediately called btrfs_map_block() to make sure there was some\nRST range covering the scrub target.\nBut if btrfs_map_block() fails, we immediately call endio for the bbio,\nwhile the bbio is newly allocated, it's completely empty.\nThen inside scrub_read_endio(), we go through the bvecs to find\nthe sector number (as bi_sector is no longer reliable if the bio is\nsubmitted to lower layers).\nAnd since the bio is empty, such bvecs iteration would not find any\nsector matching the sector, and return sector_nr == stripe->nr_sectors,\ntriggering the ASSERT().\n[FIX]\nInstead of calling btrfs_map_block() after allocating a new bbio, call\nbtrfs_map_block() first.\nSince our only objective of calling btrfs_map_block() is only to update\nstripe_len, there is really no need to do that after btrfs_alloc_bio().\nThis new timing would avoid the problem of handling empty bbio\ncompletely, and in fact fixes a possible race window for the old code,\nwhere if the submission thread is the only owner of the pending_io, the\nscrub would never finish (since we didn't decrease the pending_io\ncounter).\nAlthough the root cause of RST lookup failure still needs to be\naddressed."
	],
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2024-41067\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-41067\nhttps://lore.kernel.org/linux-cve-announce/2024072907-CVE-2024-41067-bc18@gregkh/T"
	],
	"package_state": [
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:6",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 6"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 9"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Not affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 9"
		}
	],
	"upstream_fix": "kernel 6.9.11, kernel 6.10",
	"csaw": false
}
