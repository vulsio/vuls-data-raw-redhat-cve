{
	"name": "CVE-2021-46921",
	"threat_severity": "Moderate",
	"public_date": "2024-02-27T00:00:00Z",
	"bugzilla": {
		"description": "kernel: locking/qrwlock: Fix ordering in queued_write_lock_slowpath()",
		"id": "2266440",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2266440"
	},
	"cvss3": {
		"cvss3_base_score": "4.4",
		"cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
		"status": "draft"
	},
	"cwe": "CWE-402",
	"details": [
		"In the Linux kernel, the following vulnerability has been resolved:\nlocking/qrwlock: Fix ordering in queued_write_lock_slowpath()\nWhile this code is executed with the wait_lock held, a reader can\nacquire the lock without holding wait_lock.  The writer side loops\nchecking the value with the atomic_cond_read_acquire(), but only truly\nacquires the lock when the compare-and-exchange is completed\nsuccessfully which isnâ€™t ordered. This exposes the window between the\nacquire and the cmpxchg to an A-B-A problem which allows reads\nfollowing the lock acquisition to observe values speculatively before\nthe write lock is truly acquired.\nWe've seen a problem in epoll where the reader does a xchg while\nholding the read lock, but the writer can see a value change out from\nunder it.\nWriter                                | Reader\n--------------------------------------------------------------------------------\nep_scan_ready_list()                  |\n|- write_lock_irq()                   |\n|- queued_write_lock_slowpath()   |\n|- atomic_cond_read_acquire()   |\n| read_lock_irqsave(&ep->lock, flags);\n--> (observes value before unlock) |  chain_epi_lockless()\n|                                  |    epi->next = xchg(&ep->ovflist, epi);\n|                                  | read_unlock_irqrestore(&ep->lock, flags);\n|                                  |\n|     atomic_cmpxchg_relaxed()     |\n|-- READ_ONCE(ep->ovflist);        |\nA core can order the read of the ovflist ahead of the\natomic_cmpxchg_relaxed(). Switching the cmpxchg to use acquire\nsemantics addresses this issue at which point the atomic_cond_read can\nbe switched to use relaxed semantics.\n[peterz: use try_cmpxchg()]"
	],
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2021-46921\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-46921\nhttps://lore.kernel.org/linux-cve-announce/2024022732-CVE-2021-46921-91dc@gregkh/T/#u"
	],
	"package_state": [
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:6",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 6"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Under investigation",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Under investigation",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Under investigation",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 9"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Under investigation",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 9"
		}
	],
	"csaw": false
}
