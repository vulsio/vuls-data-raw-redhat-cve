{
	"name": "CVE-2023-52854",
	"threat_severity": "Moderate",
	"public_date": "2024-05-21T00:00:00Z",
	"bugzilla": {
		"description": "kernel: padata: Fix refcnt handling in padata_free_shell()",
		"id": "2282644",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=2282644"
	},
	"cvss3": {
		"cvss3_base_score": "5.5",
		"cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
		"status": "draft"
	},
	"cwe": "CWE-416",
	"details": [
		"In the Linux kernel, the following vulnerability has been resolved:\npadata: Fix refcnt handling in padata_free_shell()\nIn a high-load arm64 environment, the pcrypt_aead01 test in LTP can lead\nto system UAF (Use-After-Free) issues. Due to the lengthy analysis of\nthe pcrypt_aead01 function call, I'll describe the problem scenario\nusing a simplified model:\nSuppose there's a user of padata named `user_function` that adheres to\nthe padata requirement of calling `padata_free_shell` after `serial()`\nhas been invoked, as demonstrated in the following code:\n```c\nstruct request {\nstruct padata_priv padata;\nstruct completion *done;\n};\nvoid parallel(struct padata_priv *padata) {\ndo_something();\n}\nvoid serial(struct padata_priv *padata) {\nstruct request *request = container_of(padata,\nstruct request,\npadata);\ncomplete(request->done);\n}\nvoid user_function() {\nDECLARE_COMPLETION(done)\npadata->parallel = parallel;\npadata->serial = serial;\npadata_do_parallel();\nwait_for_completion(&done);\npadata_free_shell();\n}\n```\nIn the corresponding padata.c file, there's the following code:\n```c\nstatic void padata_serial_worker(struct work_struct *serial_work) {\n...\ncnt = 0;\nwhile (!list_empty(&local_list)) {\n...\npadata->serial(padata);\ncnt++;\n}\nlocal_bh_enable();\nif (refcount_sub_and_test(cnt, &pd->refcnt))\npadata_free_pd(pd);\n}\n```\nBecause of the high system load and the accumulation of unexecuted\nsoftirq at this moment, `local_bh_enable()` in padata takes longer\nto execute than usual. Subsequently, when accessing `pd->refcnt`,\n`pd` has already been released by `padata_free_shell()`, resulting\nin a UAF issue with `pd->refcnt`.\nThe fix is straightforward: add `refcount_dec_and_test` before calling\n`padata_free_pd` in `padata_free_shell`."
	],
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2023-52854\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-52854\nhttps://lore.kernel.org/linux-cve-announce/2024052115-CVE-2023-52854-7657@gregkh/T"
	],
	"package_state": [
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:6",
			"fix_state": "Not affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 6"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:7",
			"fix_state": "Out of support scope",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 7"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:8",
			"fix_state": "Affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 8"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Affected",
			"package_name": "kernel",
			"product_name": "Red Hat Enterprise Linux 9"
		},
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:9",
			"fix_state": "Affected",
			"package_name": "kernel-rt",
			"product_name": "Red Hat Enterprise Linux 9"
		}
	],
	"upstream_fix": "kernel 5.10.201, kernel 5.15.139, kernel 6.1.63, kernel 6.5.12, kernel 6.6.2, kernel 6.7",
	"csaw": false
}
