{
	"bugzilla": {
		"description": "CVE-2019-18423 xen: add-to-physmap can be abused to DoS Arm hosts",
		"id": "1771344",
		"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1771344"
	},
	"csaw": false,
	"cvss3": {
		"cvss3_base_score": "5.8",
		"cvss3_scoring_vector": "CVSS:3.0/AV:A/AC:H/PR:L/UI:N/S:C/C:N/I:N/A:H",
		"status": "draft"
	},
	"cwe": "CWE-20",
	"details": [
		"An issue was discovered in Xen through 4.12.x allowing ARM guest OS users to cause a denial of service via a XENMEM_add_to_physmap hypercall. p2m->max_mapped_gfn is used by the functions p2m_resolve_translation_fault() and p2m_get_entry() to sanity check guest physical frame. The rest of the code in the two functions will assume that there is a valid root table and check that with BUG_ON(). The function p2m_get_root_pointer() will ignore the unused top bits of a guest physical frame. This means that the function p2m_set_entry() will alias the frame. However, p2m->max_mapped_gfn will be updated using the original frame. It would be possible to set p2m->max_mapped_gfn high enough to cover a frame that would lead p2m_get_root_pointer() to return NULL in p2m_get_entry() and p2m_resolve_translation_fault(). Additionally, the sanity check on p2m->max_mapped_gfn is off-by-one allowing \"highest mapped + 1\" to be considered valid. However, p2m_get_root_pointer() will return NULL. The problem could be triggered with a specially crafted hypercall XENMEM_add_to_physmap{, _batch} followed by an access to an address (via hypercall or direct access) that passes the sanity check but cause p2m_get_root_pointer() to return NULL. A malicious guest administrator may cause a hypervisor crash, resulting in a Denial of Service (DoS). Xen version 4.8 and newer are vulnerable. Only Arm systems are vulnerable. x86 systems are not affected."
	],
	"name": "CVE-2019-18423",
	"package_state": [
		{
			"cpe": "cpe:/o:redhat:enterprise_linux:5",
			"fix_state": "Not affected",
			"package_name": "kernel-xen",
			"product_name": "Red Hat Enterprise Linux 5"
		}
	],
	"public_date": "2019-10-31T00:00:00Z",
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2019-18423\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-18423"
	],
	"threat_severity": "Moderate"
}
